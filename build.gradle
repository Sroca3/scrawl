plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.sroca3'
version '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    testCompile "org.flywaydb:flyway-core:6.4.1"
    testCompile 'org.springframework.boot:spring-boot-starter-jdbc:2.2.6.RELEASE'
    testCompile group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '8.2.2.jre11'
    testCompile "org.testcontainers:testcontainers:1.14.1"
    testCompile 'org.testcontainers:mssqlserver:1.14.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath

    options
            {
                setMemberLevel JavadocMemberLevel.PUBLIC
                setAuthor true
                links "https://docs.oracle.com/en/java/javase/11/docs/api/"
            }
}

task sourceJar(type: Jar) {
    archiveClassifier = "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = "javadoc"
    from javadoc
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            pom {
                name = 'Scrawl'
                description = 'A library sql server sql building'
                url = 'https://github.com/Sroca3/scrawl'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'sroca3'
                        name = 'Stephen Roca'
                        email = 'stephen.roca@outlook.com'
                    }
                }
                scm {
                    url = 'https://github.com/Sroca3/scrawl'
                }
            }
            repositories {
                mavenLocal()
                maven {
                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                    def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    if (project.hasProperty("repositoryUsername")) {
                        credentials {
                            username "$repositoryUsername"
                            password "$repositoryPassword"
                        }
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
